bool filterIP(IPAddress ip){
  if (server.client().remoteIP() !=ip) {
    return false;
  }
  return true;
}

String createToken(){
  long r = random(100000, 999999);
  return sha1(String(r));
}

bool isLoggedIn(){
  if(server.arg("token") != www_token || server.arg("token") == ""){
    return false;
  }
  return true;
}

bool authenticate(){
  if(server.arg("username") == www_username && sha1(server.arg("password")) == www_password){
    www_token = createToken();
    return true;
  }
  return false;
}

void turnLed(bool value){
  Serial.print("GPIO ");
  Serial.println(value);
  digitalWrite(LED_BUILTIN, !value);
}

void setup() {
  Serial.begin(115200);
  pinMode(LED_BUILTIN, OUTPUT);
  turnLed(gpio_value);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println("WiFi Connect Failed! Rebooting...");
    delay(1000);
    ESP.restart();
  }

  //Handle home page
  server.on("/", []() {
    if(filterIP(allowed)){
      //Check Login
      if(isLoggedIn()){
        //serve home page
        loadMain(gpio_value, www_token);
      }
      else{
        //serve redirect to login
        server.sendHeader("Location", String("/login"), true);
        server.send(302, "text/plain", "");
      }
    }
    else{
      //send unauthorized error
      server.send(401, "text/plain", "Unauthorized");
    }
    
  });

  //Handle login
  server.on("/login", []() {
    if(filterIP(allowed)){
      //Check Login
      if(isLoggedIn()){
        //redirect to home page
        server.sendHeader("Location", String("/?token=" + www_token), true);
        server.send(302, "text/plain", "");
      }
      else{
        if(authenticate()){
          //redirect to home page
          server.sendHeader("Location", String("/?token=" + www_token), true);
          server.send(302, "text/plain", "");
        }
        else{
          //serve login page
          loadLogin();
        }
      }
    }
    else{
      //send unauthorized error
      server.send(401, "text/plain", "Unauthorized");
    }
  });

  //Handle GPIO
  server.on("/gpio", []() {
    if(filterIP(allowed)){
      if(isLoggedIn()){
        //do gpio
        if(server.arg("on") == "1"){
          gpio_value = HIGH;
        }
        else if(server.arg("on") == "0"){
          gpio_value = LOW;
        }
        //serve home page
        turnLed(gpio_value);
        loadMain(gpio_value, www_token);
      }
      else{
        //serve redirect to login
        server.sendHeader("Location", String("/login"), true);
        server.send(302, "text/plain", "");
      }
    }
    else{
      //send unauthorized error
      server.send(401, "text/plain", "Unauthorized GPIO");
    }
  });

  
  server.begin();

  Serial.print("\nOpen http://");
  Serial.print(WiFi.localIP());
  Serial.println("/ in your browser to see it working");
  //Serial.println(sha1("esp8266"));
}

void loop() {
  server.handleClient();
}
